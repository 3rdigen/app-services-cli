"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2775],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=l(r),d=a,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||o;return r?n.createElement(m,s(s({ref:t},p),{},{components:r})):n.createElement(m,s({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5426:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return f}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),s=["components"],i={},c=void 0,l={unversionedId:"commands/rhoas_kafka_acl_delete",id:"commands/rhoas_kafka_acl_delete",title:"rhoas_kafka_acl_delete",description:"rhoas kafka acl delete",source:"@site/docs/commands/rhoas_kafka_acl_delete.md",sourceDirName:"commands",slug:"/commands/rhoas_kafka_acl_delete",permalink:"/commands/rhoas_kafka_acl_delete",editUrl:"https://github.com/redhat-developer/app-services-cli/docs/commands/rhoas_kafka_acl_delete.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rhoas_kafka_acl_create",permalink:"/commands/rhoas_kafka_acl_create"},next:{title:"rhoas_kafka_acl_grant-access",permalink:"/commands/rhoas_kafka_acl_grant-access"}},p=[{value:"rhoas kafka acl delete",id:"rhoas-kafka-acl-delete",children:[{value:"Synopsis",id:"synopsis",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3},{value:"Options",id:"options",children:[],level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[],level:3},{value:"SEE ALSO",id:"see-also",children:[],level:3}],level:2}],u={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"rhoas-kafka-acl-delete"},"rhoas kafka acl delete"),(0,o.kt)("p",null,"Delete Kafka ACLs matching the provided filters"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Delete Access Control List (ACL) rules from a Kafka instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"rhoas kafka acl delete [flags]\n")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Delete an ACL for user "dev_user" on all topics\n$ rhoas kafka acl delete --operation write --permission allow --topic all --user dev_user\n\n# Delete an ACL for a service account\n$ rhoas kafka acl delete --operation all --permission any --topic "rhoas" --prefix --service-account "srvc-acct-11924479-43fe-42b4-9676-cf0c9aca81"\n\n# Delete an ACL for all users on the consumer group resource\n$ rhoas kafka acl delete --operation all --permission any --group "group-1" --all-accounts\n\n')),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --all-accounts              Set the ACL principal to match all principals (users and service accounts)\n      --cluster                   Set the resource type to cluster\n      --group string              Set the consumer group resource. When the --prefix option is also passed, this is used as the consumer group prefix\n      --instance-id string        Kafka instance ID. Uses the current instance if not set\n      --operation string          Set the ACL operation. Choose from: "all", "alter", "alter-configs", "create", "delete", "describe", "describe-configs", "read", "write"\n  -o, --output string             Specify the output format. Choose from: "json", "yaml", "yml"\n      --permission string         Set the ACL permission. Choose from: "allow", "any", "deny" (default "any")\n      --prefix                    Determine if the resource should be exact match or prefix\n      --service-account string    Service account client ID used as principal for this operation\n      --topic string              Set the topic resource. When the --prefix option is also passed, this is used as the topic prefix\n      --transactional-id string   Set the transactional ID resource\n      --user string               User ID to be used as principal\n  -y, --yes                       Skip confirmation of this action \n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/commands/rhoas_kafka_acl"},"rhoas kafka acl"),"\t - Manage Kafka ACLs for users and service accounts")))}f.isMDXComponent=!0}}]);