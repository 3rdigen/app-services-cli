"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8051],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),i=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},u=function(e){var n=i(e.components);return t.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=i(r),d=o,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return r?t.createElement(f,c(c({ref:n},u),{},{components:r})):t.createElement(f,c({ref:n},u))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var i=2;i<a;i++)c[i]=r[i];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8701:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return i},toc:function(){return u},default:function(){return m}});var t=r(3117),o=r(102),a=(r(7294),r(3905)),c=["components"],s={},l=void 0,i={unversionedId:"commands/rhoas_cluster_clean",id:"commands/rhoas_cluster_clean",title:"rhoas_cluster_clean",description:"rhoas cluster clean",source:"@site/../docs/commands/rhoas_cluster_clean.md",sourceDirName:"commands",slug:"/commands/rhoas_cluster_clean",permalink:"/commands/rhoas_cluster_clean",editUrl:"https://github.com/redhat-developer/app-services-cli/../docs/commands/rhoas_cluster_clean.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"rhoas_cluster_bind",permalink:"/commands/rhoas_cluster_bind"},next:{title:"rhoas_cluster_connect",permalink:"/commands/rhoas_cluster_connect"}},u=[{value:"rhoas cluster clean",id:"rhoas-cluster-clean",children:[{value:"Synopsis",id:"synopsis",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3},{value:"Options",id:"options",children:[],level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[],level:3},{value:"SEE ALSO",id:"see-also",children:[],level:3}],level:2}],p={toc:u};function m(e){var n=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"rhoas-cluster-clean"},"rhoas cluster clean"),(0,a.kt)("p",null,"Remove all resources created by cluster extensions"),(0,a.kt)("h3",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Remove all resources created by cluster extensions. This command removes all secrets and application service connections in your Kubernetes or OpenShift namespace."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rhoas cluster clean [flags]\n")),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"## Remove all resources\n$ rhoas cluster clean\n\n## Remove all resources in custom namespace\n$ rhoas cluster clean --namespace=myspace\n\n")),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"      --kubeconfig string   Location of the kubeconfig file\n  -n, --namespace string    Use a custom Kubernetes namespace (if not set, the current namespace will be used)\n  -y, --yes                 Forcibly perform operation without confirmation\n")),(0,a.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,a.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/commands/rhoas_cluster"},"rhoas cluster"),"\t - View and perform operations on your Kubernetes or OpenShift cluster")))}m.isMDXComponent=!0}}]);