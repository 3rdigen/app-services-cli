"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4147],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),d=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},l=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),l=d(r),f=n,u=l["".concat(c,".").concat(f)]||l[f]||m[f]||i;return r?a.createElement(u,s(s({ref:t},p),{},{components:r})):a.createElement(u,s({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=l;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var d=2;d<i;d++)s[d]=r[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}l.displayName="MDXCreateElement"},8326:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return l}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),s=["components"],o={},c=void 0,d={unversionedId:"commands/rhoas_service-registry_artifact_metadata-set",id:"commands/rhoas_service-registry_artifact_metadata-set",isDocsHomePage:!1,title:"rhoas_service-registry_artifact_metadata-set",description:"rhoas service-registry artifact metadata-set",source:"@site/docs/commands/rhoas_service-registry_artifact_metadata-set.md",sourceDirName:"commands",slug:"/commands/rhoas_service-registry_artifact_metadata-set",permalink:"/app-services-cli/commands/rhoas_service-registry_artifact_metadata-set",editUrl:"https://github.com/redhat-developer/app-services-cli/docs/commands/rhoas_service-registry_artifact_metadata-set.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rhoas_service-registry_artifact_metadata-get",permalink:"/app-services-cli/commands/rhoas_service-registry_artifact_metadata-get"},next:{title:"rhoas_service-registry_artifact_state-set",permalink:"/app-services-cli/commands/rhoas_service-registry_artifact_state-set"}},p=[{value:"rhoas service-registry artifact metadata-set",id:"rhoas-service-registry-artifact-metadata-set",children:[{value:"Synopsis",id:"synopsis",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Options",id:"options",children:[]},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[]},{value:"SEE ALSO",id:"see-also",children:[]}]}],m={toc:p};function l(e){var t=e.components,r=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"rhoas-service-registry-artifact-metadata-set"},"rhoas service-registry artifact metadata-set"),(0,i.kt)("p",null,"Update artifact metadata"),(0,i.kt)("h3",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Updates the metadata for an artifact in a Service Registry instance\nEditable metadata includes fields like name and description"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"rhoas service-registry artifact metadata-set [flags]\n")),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'## Update the metadata for an artifact\nrhoas service-registry artifact metadata-set --artifact-id=my-artifact --group=my-group --name=my-name --description=my-description\n\n## Update the metadata for an artifact using your default editor ($EDITOR)\nrhoas service-registry artifact metadata-set --artifact-id=my-artifact\n\n##  Update the metadata for an artifact using Visual Studio Code\nEDITOR="code -w" rhoas service-registry artifact metadata-set --artifact-id=my-artifact\n\n')),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'      --artifact-id string   ID of the artifact\n      --description string   Custom description of the artifact\n  -g, --group string         Artifact group (default "default")\n      --instance-id string   ID of the Service Registry instance to be used. By default, uses the currently selected instance\n      --name string          Custom name of the artifact\n  -o, --output string        Output format (json, yaml, yml)\n')),(0,i.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,i.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/app-services-cli/commands/rhoas_service-registry_artifact"},"rhoas service-registry artifact"),"\t - Manage Service Registry artifacts")))}l.isMDXComponent=!0}}]);