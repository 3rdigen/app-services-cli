"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8568],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(n),m=r,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||o;return n?a.createElement(d,i(i({ref:t},p),{},{components:n})):a.createElement(d,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2926:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return f}});var a=n(3117),r=n(102),o=(n(7294),n(3905)),i=["components"],s={},l=void 0,c={unversionedId:"commands/rhoas_kafka_list",id:"commands/rhoas_kafka_list",title:"rhoas_kafka_list",description:"rhoas kafka list",source:"@site/../docs/commands/rhoas_kafka_list.md",sourceDirName:"commands",slug:"/commands/rhoas_kafka_list",permalink:"/commands/rhoas_kafka_list",editUrl:"https://github.com/redhat-developer/app-services-cli/../docs/commands/rhoas_kafka_list.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"rhoas_kafka_describe",permalink:"/commands/rhoas_kafka_describe"},next:{title:"rhoas_kafka_topic",permalink:"/commands/rhoas_kafka_topic"}},p=[{value:"rhoas kafka list",id:"rhoas-kafka-list",children:[{value:"Synopsis",id:"synopsis",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3},{value:"Options",id:"options",children:[],level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[],level:3},{value:"SEE ALSO",id:"see-also",children:[],level:3}],level:2}],u={toc:p};function f(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"rhoas-kafka-list"},"rhoas kafka list"),(0,o.kt)("p",null,"List all Kafka instances"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"List all Kafka instances."),(0,o.kt)("p",null,"By default, this command lists the Kafka instances in a table, showing the ID, name, owner, status, cloud provider, and region. You can also view the instances in JSON or YAML format."),(0,o.kt)("p",null,"To view additional details for a particular Kafka instance, use the \u201crhoas kafka describe\u201d command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"rhoas kafka list [flags]\n")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# List all Kafka instances using the default output format\n$ rhoas kafka list\n\n# List all Kafka instances in JSON format\n$ rhoas kafka list -o json\n\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --limit int       The maximum number of Kafka instances to be returned (default 100)\n  -o, --output string   Specify the output format. Choose from: "json", "yaml", "yml"\n      --page int        Display the Kafka instances from the specified page number (default 1)\n      --search string   Text search to filter the Kafka instances by name, owner, cloud_provider, region and status\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/commands/rhoas_kafka"},"rhoas kafka"),"\t - Create, view, use, and manage your Kafka instances")))}f.isMDXComponent=!0}}]);