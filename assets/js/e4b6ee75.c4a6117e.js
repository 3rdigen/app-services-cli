"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2844],{3905:function(e,a,n){n.d(a,{Zo:function(){return p},kt:function(){return m}});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function c(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),l=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},p=function(e){var a=l(e.components);return t.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?t.createElement(f,i(i({ref:a},p),{},{components:n})):t.createElement(f,i({ref:a},p))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5591:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var t=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],c={},s=void 0,l={unversionedId:"commands/rhoas_kafka_acl_grant-admin",id:"commands/rhoas_kafka_acl_grant-admin",title:"rhoas_kafka_acl_grant-admin",description:"rhoas kafka acl grant-admin",source:"@site/docs/commands/rhoas_kafka_acl_grant-admin.md",sourceDirName:"commands",slug:"/commands/rhoas_kafka_acl_grant-admin",permalink:"/commands/rhoas_kafka_acl_grant-admin",editUrl:"https://github.com/redhat-developer/app-services-cli/docs/commands/rhoas_kafka_acl_grant-admin.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rhoas_kafka_acl_grant-access",permalink:"/commands/rhoas_kafka_acl_grant-access"},next:{title:"rhoas_kafka_acl_list",permalink:"/commands/rhoas_kafka_acl_list"}},p=[{value:"rhoas kafka acl grant-admin",id:"rhoas-kafka-acl-grant-admin",children:[{value:"Synopsis",id:"synopsis",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3},{value:"Options",id:"options",children:[],level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",children:[],level:3},{value:"SEE ALSO",id:"see-also",children:[],level:3}],level:2}],u={toc:p};function d(e){var a=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"rhoas-kafka-acl-grant-admin"},"rhoas kafka acl grant-admin"),(0,o.kt)("p",null,"Grant an account permissions to create and delete ACLs in the Kafka instance"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Grant administrative rights to a user that enable the user to create and delete Access Control Lists (ACLs) in a Kafka instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"rhoas kafka acl grant-admin [flags]\n")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Give admin rights to user "abc"\n$ rhoas kafka acl grant-admin --user abc\n\n# Give admin rights to a service account\n$ rhoas kafka acl grant-admin --service-account srvc-acct-0837725a-4e69-44e1-af3b-29da30aa85ce\n\n# Give admin rights to all accounts for a specific kafka instance\n$ rhoas kafka acl grant-admin --all-accounts --instance-id c5hv7iru4an1g84pogp0\n\n')),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      --all-accounts             Set the ACL principal to match all principals (users and service accounts)\n      --instance-id string       Kafka instance ID. Uses the current instance if not set\n      --service-account string   Service account client ID used as principal for this operation\n      --user string              User ID to be used as principal\n  -y, --yes                      Skip confirmation of this action \n")),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help      Show help for a command\n  -v, --verbose   Enable verbose mode\n")),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/commands/rhoas_kafka_acl"},"rhoas kafka acl"),"\t - Manage Kafka ACLs for users and service accounts")))}d.isMDXComponent=!0}}]);